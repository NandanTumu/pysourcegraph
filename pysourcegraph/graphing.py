"""
Convert parsed trees to graphs.
"""
from .nodes import BaseNode, PackageNode, ModuleNode, ClassNode, FunctionNode,\
                   ImportNode

def tree_to_dot(tree):
    """
    Converts a tree to GraphViz dot format
    Args:
        tree(BaseNode): Root node of tree to graph
    Returns:
        str: DOT formatted string
    """
    # From the root of the tree, create subgraphs
    graph = subgraph_generator(tree)
    return graph.source


def subgraph_generator(tree):
    """
    Helper function for :tree_to_dot:
    Args:
        tree(BaseNode): Root node of tree to graph
    Returns:
        graphviz.Digraph: Graph containing nodes
    """
    from graphviz import Digraph
    graph = Digraph("cluster_"+tree.name, "Generated by pysourcegraph", engine='fdp',
                    graph_attr={'label':tree.filepath})
    for child in tree.get_children():
        if isinstance(child, PackageNode):
            sub_graph = subgraph_generator(child)
            graph.subgraph(sub_graph)
        elif isinstance(child, ModuleNode):
            graph.node(child.name)
    return graph
